SUBROUTINE SUB.TECSYS.PO.STAT.CHG.UPDATE(FILE.DATA,DATA.TYPE,START.MARKER,END.MARKER)
*********************************************************************
* PARSE AND UPDATE DATA FOR UPDATE.TYPE="IPUR" OR UPDATE.TYPE="ORTV"
* THIS DOES THE TRANSFORMATION OF DATA AND UPDATES FILES OR CALLS OTHER
* SUBROUTINES TO COMPLETE THE WORK                                                                  
*********************************************************************
CALL IQ.FILES
COMMON FILES(200)

AM = CHAR(254)
VM = CHAR(253)
SVM = CHAR(252)


* PICK FILE OPENS
OPEN "RECEIVED-POS" TO F.RECEIVED.POS ELSE DEBUG
OPEN "PO" TO F.PO ELSE DEBUG

************************************
* START OF PROCESSING OF THE ORDER *
************************************

* ORDER DATA ARRAY VARIABLES *
LOCK.DATA=''     ;   * USED TO READ IN THE ORIGINAL ORDER DATA FROM THE PICK FILE
DATA.UPDATE='' ; * THIS IS UPDATED WITH THE WMS INFORMATION AS IT IS PROCESSED BEFORE IT IS WRITTEN TO THE ORDER
ORD.NUM=''
UPDATE.FILE=''  ; * USED TO IDENTIFY WHERE ORDER DATA CAME FROM


**************************************
* INITIALIZE AND LOAD DATA FROM PICK *
**************************************
LOCATE "OutboundOrder" IN FILE.DATA<1>,START.MARKER SETTING POS THEN
    IF POS > START.MARKER AND POS < END.MARKER THEN
        ORD.NUM=FILE.DATA<3,POS>
    END ELSE
        FIND.TAG = "OutboundOrder"
        TAG.DATA = ''
        CALL SUB.TECSYS.LOC.TAG.DATA(FILE.DATA,FIND.TAG,TAG.DATA,START.MARKER,END.MARKER,KEY)

        IF TAG.DATA # '' AND TAG.DATA # '0' THEN
            TAG.DATA = TAG.DATA
        END ELSE
            TAG.DATA = "NO TIED ORDER"
        END

        EMAIL.LIST = ''
        CUSTOM.FROM = ''
        CUSTOM.SUBJECT='ORDER NUMBER NOT FOUND WITHIN BOUNDS ON ORDER# ': TAG.DATA
        CUSTOM.BODY = ''
        
        CALL SUB.TECSYS.EMAIL.DATA(FILE.DATA,EMAIL.LIST,CUSTOM.FROM,CUSTOM.SUBJECT,CUSTOM.BODY,START.MARKER,END.MARKER)
        RELEASE
        RETURN
    END
END ELSE
    * IF WE CANT' FIND AN ORDER NUMBER THEN WE CAN'T LOAD ORDER DATA!! WHAT SHOULD WE DO HERE, SAVE THE DATA SOMEWHERE?
        EMAIL.LIST = ''
        CUSTOM.FROM = ''
        CUSTOM.SUBJECT='NO <OutboundOrder> TAG FOUND IN UPDATE '
        CUSTOM.BODY = ''
        
        CALL SUB.TECSYS.EMAIL.DATA(FILE.DATA,EMAIL.LIST,CUSTOM.FROM,CUSTOM.SUBJECT,CUSTOM.BODY,START.MARKER,END.MARKER)
END

IF ORD.NUM="" THEN
    LOCATE "InboundOrder" IN FILE.DATA<1>,START.MARKER SETTING POS THEN
        IF POS > START.MARKER AND POS < END.MARKER THEN
            ORD.NUM=FILE.DATA<3,POS>
        END ELSE
            FIND.TAG = "InboundOrder"
            TAG.DATA = ''
            CALL SUB.TECSYS.LOC.TAG.DATA(FILE.DATA,FIND.TAG,TAG.DATA,START.MARKER,END.MARKER,KEY)

            IF TAG.DATA # '' AND TAG.DATA # '0' THEN
                TAG.DATA = TAG.DATA
            END ELSE
                TAG.DATA = "NO TIED ORDER"
            END

            EMAIL.LIST = ''
            CUSTOM.FROM = ''
            CUSTOM.SUBJECT='ORDER NUMBER NOT FOUND WITHIN BOUNDS ON ORDER# ': TAG.DATA
            CUSTOM.BODY = ''
            
            CALL SUB.TECSYS.EMAIL.DATA(FILE.DATA,EMAIL.LIST,CUSTOM.FROM,CUSTOM.SUBJECT,CUSTOM.BODY,START.MARKER,END.MARKER)
         END
    END ELSE
      * IF WE CANT' FIND AN ORDER NUMBER THEN WE CAN'T LOAD ORDER DATA!! WHAT SHOULD WE DO HERE, SAVE THE DATA SOMEWHERE?
        EMAIL.LIST = ''
        CUSTOM.FROM = ''
        CUSTOM.SUBJECT='NO <InboundOrder> TAG FOUND IN UPDATE '
        CUSTOM.BODY = ''
        
        CALL SUB.TECSYS.EMAIL.DATA(FILE.DATA,EMAIL.LIST,CUSTOM.FROM,CUSTOM.SUBJECT,CUSTOM.BODY,START.MARKER,END.MARKER)
    END
END

READU LOCK.DATA FROM F.PO,ORD.NUM THEN     ;  * LOCK AND READ IN ORIGINAL ORDER ITEM DATA
    DATA.UPDATE=LOCK.DATA    ;   * THIS IS TO PRE-POPULATE OUR UPDATE ARRAY WITH ORDER DATA THIS MAY NOT BE NEEDED IF WE DONT' WANT TO DO IT
    UPDATE.FILE="PO"
END ELSE
    READU LOCK.DATA FROM F.RECEIVED.POS,ORD.NUM THEN    ; * LOCK AND READ FROM SHIPPING FILE IF NOT FOUND IN ORDER FILE
    DATA.UPDATE=LOCK.DATA
    UPDATE.FILE="RPO"
    END ELSE 
        EMAIL.LIST = ''
        CUSTOM.FROM = ''
        CUSTOM.SUBJECT='UNABLE TO READ PO/RPO RECORD FILE FOR ORDER# ': ORD.NUM
        CUSTOM.BODY = ''
        
        CALL SUB.TECSYS.EMAIL.DATA(FILE.DATA,EMAIL.LIST,CUSTOM.FROM,CUSTOM.SUBJECT,CUSTOM.BODY,START.MARKER,END.MARKER)
        
        RELEASE
        RETURN
    END
END


*************************************************
* THIS IS WHERE WE LOOK UP AND ASSIGN THE DATA  *
* DON'T FORGET THERE IS NO TAG FOR THIS SECTION *
*************************************************
* THESE VARIABLES ARE THE PIECES OF INFORMATION WE ARE GOING TO LOCATE IN THE UPDATE *
TASK=''
TRANS.STAT=''
ORD.STAT=''
BRANCH=''
USER.ID=''

    LOCATE "Warehouse" IN FILE.DATA<1>,START.MARKER SETTING POS THEN
        IF POS > START.MARKER AND POS < END.MARKER THEN
            BRANCH=FILE.DATA<3,POS>
        END ELSE
            BRANCH=1
        END
    END ELSE
        * IF WE CANT' FIND THE BRANCH NUMBER WE ASSUME IT IS 1
        BRANCH=1
    END

    LOCATE "Task" IN FILE.DATA<1>,START.MARKER SETTING POS THEN
        IF POS > START.MARKER AND POS < END.MARKER THEN
            TASK=FILE.DATA<3,POS>
        END
    END ELSE
        TASK="TASK NOT FOUND"
    END
        
    LOCATE "Status" IN FILE.DATA<1>,START.MARKER SETTING POS THEN
        IF POS > START.MARKER AND POS < END.MARKER THEN
            TRANS.STAT=FILE.DATA<3,POS>
        END
    END ELSE
        TRANS.STAT="TRANSACTION STATUS NOT FOUND"
    END

    LOCATE "OrderStatus" IN FILE.DATA<1>,START.MARKER SETTING POS THEN
        IF POS > START.MARKER AND POS < END.MARKER THEN
            ORD.STAT=FILE.DATA<3,POS>
        END
    END ELSE
        ORD.STAT="ORDER STATUS NOT FOUND"
    END

    LOCATE "Username" IN FILE.DATA<1>,START.MARKER SETTING POS THEN
        IF POS > START.MARKER AND POS < END.MARKER THEN
            USER.ID=FILE.DATA<3,POS>
        END
    END ELSE
        USER.ID="TRANSACTION STATUS NOT FOUND"
    END

************************************
* LOCATING OF ALL DATA IS COMPLETE *
************************************

IF USER.ID = "wms_erp_si_es" THEN USER.ID = "WSYS"

* BRANCH NUMBER VERIFICATION
IF BRANCH = "BRANCH1" OR BRANCH = "WHSE1" THEN BRANCH = "1"

*****************************************************************
* WE HAVE THE DATA TRANSFORMED THE WAY WE WANT IT               *
* NOW WE DECIDE WHAT IS IMPORTANT/NEEDED FOR UPDATE AND LOAD IT *
* INTO THE DATA.UPDATE ARRAY                                    *
*****************************************************************

DATA.UPDATE<84> = ORD.STAT


*************************************************************
* ALL ORDER DATA HAS BEEN PROCESSED AND IS READY FOR UPDATE *
*************************************************************
* THIS IS WHERE WE UPDATE THE TIMESTAMP DATA ARRAY          *
*************************************************************
TS.MSG=''           ;   * THIS IS UPDATED AND PASSED TO THE SUBROUTINE
TS.KEY=ORD.NUM:'*PO'


* HARD CODED TIMESTAMP ATTRIBUTES *
TS.MSG<1>="ORDER PLANNED TO RECV"
TS.MSG<5>="PO"


IF ORD.STAT="CAN" THEN ; *CAN - Canceled
   TS.MSG<2>="ORDER CANCELED" 
END
   
IF ORD.STAT="HOLD" THEN ; *HOLD - On Hold
   TS.MSG<2>="ORDER ON HOLD"
END

IF ORD.STAT="PACK" THEN ; *PACK 
    IF LOCK.DATA<84> = "PACK" THEN
        GOTO UPDATE.ORDER.ONLY
    END ELSE
        TS.MSG<2>="ORDER PACKED"
    END
END

IF ORD.STAT="PLAN" THEN ; *PLAN
    IF LOCK.DATA<84> = "PLAN" THEN
        GOTO UPDATE.ORDER.ONLY
    END ELSE
        TS.MSG<2>="ORDER PLANNED BY: " + USER.ID
    END

END

IF ORD.STAT="SCH" THEN ; *SCH 
   TS.MSG<2>="ORDER SCHEDULED"
END

IF ORD.STAT="SHIP" THEN ; *SHIP 
   TS.MSG<2>="ORDER SHIPPED"
END

IF ORD.STAT="SHPL" THEN ; *SHPL - Trailer Loaded
   TS.MSG<2>="LOADED ON TRUCK"
END

IF ORD.STAT="SUSP" THEN ; *SUSP - Suspended
   TS.MSG<2>="ORDER SUSPENDED"
END

IF ORD.STAT="UNPL" THEN ; *UNPL - Removed from Receipt
   TS.MSG<2>="ORDER UNPLANNED"
END

IF ORD.STAT="" OR ORD.STAT = "NA" THEN ; * NA - N/A
    DEBUG
    RELEASE
    RETURN
END


**************************************************************************
* THIS IS WHERE WE CALL ALL UPDATE PROGRAMS FOR ANY WORK TO BE COMPLETED *
* WRITE THE DATA TO THE ORDER AND TO THE TIMESTAMP, ETC ETC              *
**************************************************************************

CALL WMS.TIMESTAMP.UPDATE(TS.MSG, TS.KEY, "WMS", USER.ID, error)


UPDATE.ORDER.ONLY:

* SAFETY NET OF CONSISTENCY TO LOAD OUR UPDATED INFORMATION INTO THE ORIGINAL ORDER BEFORE WE WRITE IT
LOCK.DATA=DATA.UPDATE

BEGIN CASE

    CASE UPDATE.FILE="PO"
        WRITE LOCK.DATA ON F.PO,ORD.NUM                  ;       * UPDATES THE ORDER FILE

    CASE UPDATE.FILE="RPO"
        WRITE LOCK.DATA ON F.RECEIVED.POS,ORD.NUM                  ;       * UPDATES THE SHIPPING FILE

    CASE 1
        DEBUG

END CASE

RELEASE
RETURN